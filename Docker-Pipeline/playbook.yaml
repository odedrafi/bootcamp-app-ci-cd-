---
- hosts: "{{ group }}"
  become: true
  vars_files:
    - vars.yaml

  tasks:
  - name: Update apt repo and cache on all Debian/Ubuntu boxes
    apt:
     update_cache: yes
     force_apt_get: yes
     cache_valid_time: 3600    

  - script: |
      curl -fsSL https://get.docker.com -o get-docker.sh
      sudo sh get-docker.sh
      sudo chmod 777 /var/run/docker.sock   

  - script: |
      docker login -u odedrafi -p {{registry_password}} https://hub.docker.com/  

  - script: |
      docker pull odedrafi/bootcampapp

  - name: kill previous docker
    shell: |
      if  [ $( docker ps -aq | wc -w ) -gt 0 ]; then
        docker rm -f $(docker ps -aq)
        docker rmi $(docker images -q)
      f

  - script: |
      cat  << EOF > .env
      # Host configuration
      PORT= {{ http_port }}
      HOST=0.0.0.0
      HOST_URL=http://{{public_ip}}:{{ http_port }}
      COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
      NODE_ENV=development
      # Okta configuration
      OKTA_ORG_URL=https://{{ okta_org_url }}
      OKTA_CLIENT_ID={{ okta_client_id }}
      OKTA_CLIENT_SECRET={{ okta_client_secret }}
      # Postgres
      PGHOST={{ pg_host }}
      PGUSERNAME={{ pg_username }}
      PGDATABASE={{ pg_database }}
      PGPASSWORD={{ pg_password }}
      PGPORT=5432
      EOF
  - name: run Docker image
    shell: docker run --restart always -d -p 0.0.0.0:8080:8080/tcp odedrafi/bootcampapp

  - name: copy .env file to docker container
    shell: docker cp ~/.env  $(sudo docker ps -aq):/usr/src/app/.env
    
  - name: restart docker container
    shell: docker restart $(sudo docker ps -aq)

  - name: npm run initdb
    shell: docker exec $(sudo docker ps -aq) npm run initdb
    run_once: true    