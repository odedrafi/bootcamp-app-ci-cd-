name: build_$(Date:yyyyMMdd)$(Rev:r)
 
# trigger:
#   - master



stages:
  
  - stage: build
    jobs:
      - job: build_on_linux
        pool:
          name: "Default"
        steps:
          - script: |
              sudo apt-get update
              sudo curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
              sudo apt-get install -y nodejs
            displayName: 'Install the dependency packages' 
          
          - task: Bash@3
            inputs:
              targetType: "inline"
          
          - script: |
               curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          # - script: |
          #      az config set extension.use_dynamic_install=yes_without_prompt
          - script: |
               AZURE_DEVOPS_EXT_PAT=gr4325yts5yixqlkglpjjjffex4hwiyk4en5nzvoo4kwanzdemfq az artifacts universal publish    --organization https://dev.azure.com/odedrafi35/    --feed feed1    --name artifact$(Build.BuildId)$(rev:r)    --version 0.0.1    --description "Welcome to Universal Packages"    --path . 
                          
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.BinariesDirectory)'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)'
              artifact: 'arti'
              publishLocation: 'pipeline'
          - task: PublishBuildArtifacts@1
            inputs:
               pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' 
               artifactName: 'artifact'
            displayName: 'Publish Artifact'

          
  - stage: DeployStaging
    jobs:
      - job:
        pool:
          name: "Default"
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'specific'
              downloadPath: '$(System.ArtifactsDirectory)'

          # - task: UniversalPackages@0
          #   inputs:
          #     command: 'download'
          #     downloadDirectory: '$(System.DefaultWorkingDirectory)'
          #     feedsToUse: 'internal'
          #     vstsFeed: '83c24fb4-387d-49b2-a813-98c9283e4af6'
          #     vstsPackageVersion: '*.*.*'
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '../**/*.zip'
              destinationFolder: 'bootcamp-app'
              cleanDestinationFolder: true
              overwriteExistingFiles: false
          - script: |
              ansible-playbook -i /home/adminuser/myagent/_work/1/s/inventory.ini /home/adminuser/myagent/_work/1/s/playbook.yaml --extra-vars "group=Staging Var_file=/home/adminuser/myagent/_work/1/s/stagingVar.yaml"
          
  - stage: DeployProduction
    
    jobs:
      - job:
        pool:
          name: "production"
        steps:
          - script: |
              curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash         
          - script: |
               AZURE_DEVOPS_EXT_PAT=gr4325yts5yixqlkglpjjjffex4hwiyk4en5nzvoo4kwanzdemfq az artifacts universal download    --organization https://dev.azure.com/odedrafi35/    --feed feed1    --name artifact$(Build.BuildId)$(rev:r)    --version 0.0.1$(Rev:r)       --path .
             

          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'specific'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '../**/*.zip'
              destinationFolder: 'bootcamp-app'
              cleanDestinationFolder: true
              overwriteExistingFiles: false
          - script: |
              ansible-playbook -i /home/adminuser/myagent/_work/1/s/ProductionInventory.ini /home/adminuser/myagent/_work/1/s/playbook.yaml --extra-vars "group=Production Var_file=/home/adminuser/myagent/_work/1/s/productionVAr.yaml"
                