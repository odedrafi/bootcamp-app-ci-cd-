name: build_$(Date:yyyyMMdd)$(Rev:r)

trigger:
  - master

stages:
  - stage: build
    jobs:
      - job: build_on_linux
        pool:
          name: "Default"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "14.x"
            displayName: "Install Node.js"

          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                sudo apt-get -y install zip
                echo  "# Host configuration
                   PORT=$(http_port)
                   HOST=0.0.0.0

                   HOST_URL=http://$(public_ip):$(http_port)
                   COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
                   NODE_ENV=development

                   # Okta configuration
                   OKTA_ORG_URL=https://$(okta_org_url)
                   OKTA_CLIENT_ID=$(okta_client_id)
                   OKTA_CLIENT_SECRET=$(okta_client_secret)

                   # Postgres
                   PGHOST=$(pg_host) 
                   PGUSERNAME=$(pg_username)
                   PGDATABASE=$(pg_database)
                   PGPASSWORD=$(pg_password)
                   PGPORT=5432" > .env
          - script: |
              echo "az devops login --organization https://dev.azure.com/odedrafi35/

                     az artifacts universal publish
                      --organization https://dev.azure.com/odedrafi35/
                      --feed feed1
                      --name my-first-package
                      --version 0.0.1
                      --description "Welcome to Universal Packages"
                      --path .. " > .npmrc
            displayName: "Create & update .npmrc file To connect to azure artifacts"

          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                sudo apt-get -y install zip
                echo  "# Host configuration
                   PORT=$(http_port)
                   HOST=0.0.0.0

                   HOST_URL=http://$(production_public_ip):$(http_port)
                   COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
                   NODE_ENV=development

                   # Okta configuration
                   OKTA_ORG_URL=https://$(okta_org_url)
                   OKTA_CLIENT_ID=$(okta_client_id)
                   OKTA_CLIENT_SECRET=$(okta_client_secret)

                   # Postgres
                   PGHOST=$(production_host) 
                   PGUSERNAME=$(pg_username)
                   PGDATABASE=$(pg_database)
                   PGPASSWORD=$(pg_password)
                   PGPORT=5432" > production.env
            displayName: "Create & update .npmrc file To connect to azure artifacts"

          - task: Npm@1
            inputs:
              command: "install"
              workingDir: "../"
              customRegistry: "useFeed"
              customFeed: "83c24fb4-387d-49b2-a813-98c9283e4af6"
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: "$(Build.BinariesDirectory)"
              includeRootFolder: true
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
              replaceExistingArchive: true
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Pipeline.Workspace)"
              artifact: "arti"
              publishLocation: "pipeline"

  - stage: DeployStaging
    jobs:
      - job:
        pool:
          name: "Default"
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: "current"
              downloadType: "specific"
              downloadPath: "$(System.ArtifactsDirectory)"
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: "../**/*.zip"
              destinationFolder: "bootcamp-app"
              cleanDestinationFolder: true
              overwriteExistingFiles: false
          - script: |
              ansible-playbook -i /home/adminuser/myagent/_work/1/s/inventory.ini /home/adminuser/myagent/_work/1/s/playbook.yaml --extra-vars "group=Staging Var_file=/home/adminuser/myagent/_work/1/a/arti/s/stagingVar.yaml"

  - stage: DeployProduction

    jobs:
      - job:
        pool:
          name: "production"
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: "current"
              downloadType: "specific"
              downloadPath: "$(System.ArtifactsDirectory)"
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: "../**/*.zip"
              destinationFolder: "bootcamp-app"
              cleanDestinationFolder: true
              overwriteExistingFiles: false
          - script: |
              ansible-playbook -i /home/adminuser/myagent/_work/1/s/ProductionInventory.ini /home/adminuser/myagent/_work/1/s/playbook.yaml --extra-vars "group=Production Var_file=/home/adminuser/myagent/_work/1/a/arti/s/productionVAr.yaml"

